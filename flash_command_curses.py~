import os
import curses
from datetime import datetime
import click

# Color constants
COLOR_SUCCESS = 1
COLOR_WARNING = 2
COLOR_ERROR = 3

def init_colors():
    curses.start_color()
    curses.init_pair(COLOR_SUCCESS, curses.COLOR_GREEN, curses.COLOR_BLACK)
    curses.init_pair(COLOR_WARNING, curses.COLOR_YELLOW, curses.COLOR_BLACK)
    curses.init_pair(COLOR_ERROR, curses.COLOR_RED, curses.COLOR_BLACK)

def print_colored(x, y, stdscr, message, color):
    stdscr.addstr(x, y, message, curses.color_pair(color))
    stdscr.refresh()

def choose_projects_directory(stdscr):
    stdscr.clear()
    stdscr.addstr(2, 2, "Enter the directory to track: ", curses.A_BOLD)
    stdscr.refresh()
    curses.echo()
    directory = stdscr.getstr(2, 32).decode('utf-8')
    curses.noecho()
    return directory

def main_menu(stdscr, directory):
    init_colors()
    curses.curs_set(0)
    stdscr.clear()
    os.chdir(directory)

    projects = [pjct for pjct in os.listdir() 
                if os.path.isfile(f"{pjct}/CMakeLists.txt") 
                or os.path.isfile(f"{pjct}/flash_command.sh")]
    commands = {
            "idf.py":{
                "b":"idf.py build",
                "f":"sudo idf.py flash",
                "e":"nvim main/*.c CMakeLists.txt",
                "z":"fzf -m | xargs nvim",
                     },
            "flash_command.sh":{
                "b":"echo no build scripts",
                "f":"sudo ./flash_command.sh",
                "e":"nvim *.sh",
                "z":"fzf -m | xargs nvim",
                     },
               }

    while True:
        stdscr.clear()
        stdscr.refresh()

        stdscr.addstr(1, 2, f"Nyto Flasher -  {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", curses.A_BOLD)

        stdscr.addstr(3, 2, "By Inknyto", curses.A_BOLD)
        stdscr.addstr(4, 2, f"Projects directory: {directory}", curses.A_BOLD)

        for i, pjct in enumerate(projects):
            stdscr.addstr(i+6, 2, f"{i}. {pjct}", curses.A_BOLD)
        stdscr.addstr(len(projects)+7 , 2, "[s]creen [c]hange dir [q]uit: ", curses.A_BOLD)

        choice = chr(stdscr.getch())
        if not choice.isnumeric():
            if choice == "q":
                exit(0)
            elif choice == "s":
                os.system("sudo screen /dev/ttyUSB0 115200")
            elif choice == "c":
                directory = choose_projects_directory(stdscr)
                curses.wrapper(main_menu, directory)
        else:
            os.chdir(projects[int(choice)])
            
            while True:
                stdscr.clear()
                stdscr.refresh()
                stdscr.addstr(1, 2, f"Nyto Flasher -  {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", curses.A_BOLD)
                stdscr.addstr(3, 2, "[b]uild [f]lash [e]dit fu[z]z [q]uit: ", curses.A_BOLD)
                stdscr.addstr(4, 2, f"Project: {projects[int(choice)]} ", curses.A_BOLD)
                stdscr.addstr(6, 2, f" ".join(os.listdir()), curses.A_BOLD)
                
                command = chr(stdscr.getch())
                if command != 'q':
                    if os.path.isfile('CMakeLists.txt'):
                        output = os.system(commands['idf.py'][command])
                    elif os.path.isfile('flash_command.sh'):
                        output = os.system(commands['flash_command.sh'][command])
                else:
                    break
        os.chdir("../")

if __name__ == "__main__":
    directory = "/home/nyto/Documents/git/nyto-esp32"
    curses.wrapper(main_menu, directory)


