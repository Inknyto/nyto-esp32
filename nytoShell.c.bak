#include <stdio.h>
#include <string.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_log.h"
#include "linenoise/linenoise.h"
#define TAG "SIMPLE_SHELL"

void handle_command(char* command, char** argv) {
  if (strcmp(command, "help") == 0) {
    printf("Available commands:\n");
    // List available commands here
  } else if (strcmp(command, "info") == 0) {
    // Print system information
  } else {
    printf("Unknown command: %s\n", command);
  }
}

void start_shell(void* pvParameters) {
  // Initialize linenoise
  linenoiseSetCompletionCallback(NULL); // Optional: Disable autocompletion
  while (true) {
    char* line = linenoise("esp32> ");
    if (line == NULL) { // Handle exit (Ctrl+C)
      break;
    }
    // Split the line into command and arguments
    int argc = 0;
    char* argv[32]; // Adjust size based on your needs
    char* token = strtok(line, " ");
    while (token != NULL) {
      argv[argc++] = token;
      token = strtok(NULL, " ");
    }
    // Call the command handler
    handle_command(argv[0], argv);
    // Free the allocated memory
    linenoiseFree(line);
  }
  vTaskDelete(NULL); // Delete this task
}

void app_main(void) {
  xTaskCreate(&start_shell, "simple_shell", 2048, NULL, 5, NULL);
}

